{"version":3,"sources":["../../es6/expense/controller.js"],"names":[],"mappings":";;;;;;;;sBAAqB,SAAS;;uBACV,SAAS;;;;uBACP,eAAe;;AAErC,IAAM,MAAM,GAAG,QAJP,MAAM,EAIS,CAAC;;qBAET,MAAM;;AAErB,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;MAE1B,KAAK,GAAI,GAAG,CAAC,IAAI,CAAjB,KAAK;;AAEV,uBAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ,EAAI;AAClC,OAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACpB,CAAC,CAAC;CAEJ;;AAED,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;;AAE9B,MAAI,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAA,KAAK;WAAI,KAAK;GAAA,CAAC,CAAC;AACrE,MAAI,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;AAC3B,MAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC,MAAM,CAAC;;AAE3C,MAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,EAAI;AACjC,WAAO;AACL,YAAM,EAAN,MAAM;AACN,iBAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;AACjC,eAAS,EAAT,SAAS;AACT,WAAK,EAAL,KAAK;AACL,WAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;KACtB,CAAA;GACF,CAAC,CAAC;;AAEH,SAAO,SAhCD,OAAO,CAgCE,qBAAQ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAC/D,qBAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM,EAAI;AACtC,WAAO,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;GAC9D,CAAC,SACI,CAAC,UAAA,GAAG;WAAI,IAAI,CAAC,GAAG,CAAC;GAAA,CAAC,CAAC;CAC5B;;AAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AACzB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC","file":"es6/expense/controller.js","sourcesContent":["import {Router} from 'express';\nimport Expense from './model';\nimport {isError} from 'js-type-check';\n\nconst router = Router();\n\nexport default router;\n\nfunction findAll(req, res, next) {\n\n  let {group} = req.user;\n\n  Expense.all(group).then(expenses => {\n    res.json(expenses);\n  });\n\n}\n\nfunction insert(req, res, next) {\n\n  let people = [req.user.user, req.user.shared].filter(email => email);\n  let timestamp = new Date();\n  let amount = req.body.amount/people.length;\n\n  let expenses = people.map(email => {\n    return {\n      amount,\n      description: req.body.description,\n      timestamp,\n      email,\n      group: req.user.group\n    }\n  });\n\n  return isError(Expense.validate(expenses[0])) ? next(expenses[0]) : \n    Expense.insert(expenses).then(result => {\n      return result.errors === 0 ? res.json(result) : next(result);\n    })\n    .catch(err => next(err));\n}\n\nrouter.get('/', findAll);\nrouter.post('/', insert);\n"]}