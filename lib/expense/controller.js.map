{"version":3,"sources":["../../es6/expense/controller.js"],"names":[],"mappings":";;;;;;;;sBAAqB,SAAS;;uBACV,SAAS;;;;uBACP,eAAe;;oBACpB,WAAW;;;;AAE5B,IAAM,MAAM,GAAG,QALP,MAAM,EAKS,CAAC;;qBAET,MAAM;;AAErB,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;MAE1B,KAAK,GAAI,GAAG,CAAC,IAAI,CAAjB,KAAK;;AAEV,uBAAQ,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ,EAAI;AAClC,OAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACpB,CAAC,CAAC;CAEJ;;AAED,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;;;;AAI9B,MAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AACzB,MAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;;;AAG7B,MAAI,MAAM,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,MAAM,CAAC,UAAA,KAAK;WAAI,KAAK;GAAA,CAAC,CAAC;AACnD,MAAI,SAAS,GAAG,IAAI,IAAI,EAAE,CAAC;AAC3B,MAAI,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,GAAC,MAAM,CAAC,MAAM,CAAC;;AAE3C,MAAI,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAA,KAAK,EAAI;AACjC,WAAO;AACL,YAAM,EAAN,MAAM;AACN,aAAO,EAAE,IAAI;AACb,iBAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;AACjC,WAAK,EAAL,KAAK;AACL,WAAK,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK;AACrB,eAAS,EAAT,SAAS;KACV,CAAA;GACF,CAAC,CAAC;;AAEH,MAAI,OAAO,GAAG,kBAAK,EAAE,EAAE,CAAC;AACxB,UAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,EAAI;AAC1B,QAAI,MAAM,EAAE;AACV,aAAO,CAAC,OAAO,GAAG,OAAO,CAAC;KAC3B;GACF,CAAC,CAAC;;AAEH,MAAI,gBAAgB,GAAG,qBAAQ,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErD,SAAO,SAjDD,OAAO,CAiDE,gBAAgB,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,GACvD,qBAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM,EAAI;AACtC,WAAO,MAAM,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;GAC9D,CAAC;;WAEI,CAAC,UAAA,GAAG;WAAI,IAAI,CAAC,GAAG,CAAC;GAAA,CAAC,CAAC;CAC5B;;AAED,SAAS,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;;AAE/B,MAAI,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;AACzB,MAAI,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC;;AAExB,uBAAQ,OAAO,CAAC,IAAI,EAAE,QAAQ,CAAC,CAC5B,IAAI,CAAC,UAAA,MAAM,EAAI;AACd,OAAG,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,QAAQ,EAAC,CAAC,CAAC;GAC/B,CAAC,CAAC;CAEN;;AAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;AACzB,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;AACzB,MAAM,UAAO,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC","file":"es6/expense/controller.js","sourcesContent":["import {Router} from 'express';\nimport Expense from './model';\nimport {isError} from 'js-type-check';\nimport uuid from 'node-uuid';\n\nconst router = Router();\n\nexport default router;\n\nfunction findAll(req, res, next) {\n\n  let {group} = req.user;\n\n  Expense.all(group).then(expenses => {\n    res.json(expenses);\n  });\n\n}\n\nfunction insert(req, res, next) {\n\n  // user == the user\n  // shared == the user with whom user shares a bank account\n  let user = req.user.user;\n  let shared = req.user.shared;\n\n  // if share undefined, filter it from array\n  let people = [user, shared].filter(email => email);\n  let timestamp = new Date();\n  let amount = req.body.amount/people.length;\n\n  let expenses = people.map(email => {\n    return {\n      amount,\n      creator: user,\n      description: req.body.description,\n      email,\n      group: req.user.group,\n      timestamp\n    }\n  });\n\n  let shareId = uuid.v4();\n  expenses.forEach(expense => {\n    if (shared) {\n      expense.shareId = shareId;\n    }\n  });\n\n  let validatedExpense = Expense.validate(expenses[0]);\n\n  return isError(validatedExpense) ? next(validatedExpense) : \n    Expense.insert(expenses).then(result => {\n      return result.errors === 0 ? res.json(result) : next(result);\n    })\n    // errors not handled above\n    .catch(err => next(err));\n}\n\nfunction destroy(req, res, next) {\n\n  let user = req.user.user;\n  let expenses = req.body;\n\n  Expense.destroy(user, expenses)\n    .then(result => {\n      res.json({deleted: expenses});\n    });\n\n}\n\nrouter.get('/', findAll);\nrouter.post('/', insert);\nrouter.delete('/', destroy);\n"]}