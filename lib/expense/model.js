'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _db = require('../db');

var _db2 = _interopRequireDefault(_db);

var _schema = require('schema');

var _schema2 = _interopRequireDefault(_schema);

var _auth = require('../auth');

var _schema3 = require('./schema');

var _schema4 = _interopRequireDefault(_schema3);

var r = _db2['default'].r;
var conn = _db2['default'].conn;

var expenses = r.table('expenses');
var validate = _schema2['default'](_schema4['default']);

function insert(expense) {
  return expenses.insert(expense).run(conn);
};

function all(group) {
  return expenses.filter({ group: group }).outerJoin(r.table('users'), function (expense, user) {
    return expense('email').eq(user('id'));
  }).without({ right: 'id' }) // need expense document id, not user id which is email
  .zip().map(function (expense) {
    return {
      amount: expense('amount'),
      deleted: expense('deleted')['default'](false),
      description: expense('description')['default']('NONE'),
      name: expense('name')['default'](expense('email')),
      user: expense('email'),
      id: expense('id'),
      timestamp: expense('timestamp'),
      creator: expense('creator'),
      shareId: expense('shareId')['default'](null)
    };
  }).orderBy(r.desc('timestamp')).run(conn).then(_db2['default'].toArray);
}

function destroy(user, expenseList) {

  return expenses.getAll(r.args(expenseList)).filter(r.or(r.row('email').eq(user), r.row('creator').eq(user))).update({ deleted: true }).run(conn);
}

exports['default'] = { insert: insert, all: all, validate: validate, destroy: destroy };
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4cGVuc2UvbW9kZWwuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7a0JBQWUsT0FBTzs7OztzQkFDRyxRQUFROzs7O29CQUNkLFNBQVM7O3VCQUNULFVBQVU7Ozs7QUFFN0IsSUFBTSxDQUFDLEdBQUcsZ0JBQUcsQ0FBQyxDQUFDO0FBQ2YsSUFBTSxJQUFJLEdBQUcsZ0JBQUcsSUFBSSxDQUFDOztBQUVyQixJQUFNLFFBQVEsR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3JDLElBQU0sUUFBUSxHQUFHLHdDQUFvQixDQUFDOztBQUV0QyxTQUFTLE1BQU0sQ0FBQyxPQUFPLEVBQUU7QUFDdkIsU0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztDQUMzQyxDQUFDOztBQUVGLFNBQVMsR0FBRyxDQUFDLEtBQUssRUFBRTtBQUNsQixTQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsRUFBQyxLQUFLLEVBQUwsS0FBSyxFQUFDLENBQUMsQ0FDNUIsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUUsVUFBQyxPQUFPLEVBQUUsSUFBSSxFQUFLO0FBQzlDLFdBQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztHQUN4QyxDQUFDLENBQ0QsT0FBTyxDQUFDLEVBQUMsS0FBSyxFQUFFLElBQUksRUFBQyxDQUFDO0dBQ3RCLEdBQUcsRUFBRSxDQUNMLEdBQUcsQ0FBQyxVQUFBLE9BQU8sRUFBSTtBQUNkLFdBQU87QUFDTCxZQUFNLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUN6QixhQUFPLEVBQUUsT0FBTyxDQUFDLFNBQVMsQ0FBQyxXQUFRLENBQUMsS0FBSyxDQUFDO0FBQzFDLGlCQUFXLEVBQUUsT0FBTyxDQUFDLGFBQWEsQ0FBQyxXQUFRLENBQUMsTUFBTSxDQUFDO0FBQ25ELFVBQUksRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDLFdBQVEsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDL0MsVUFBSSxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUM7QUFDdEIsUUFBRSxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUM7QUFDakIsZUFBUyxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUM7QUFDL0IsYUFBTyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDM0IsYUFBTyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUMsV0FBUSxDQUFDLElBQUksQ0FBQztLQUMxQyxDQUFBO0dBQ0YsQ0FBQyxDQUNELE9BQU8sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQzVCLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FDVCxJQUFJLENBQUMsZ0JBQUcsT0FBTyxDQUFDLENBQUM7Q0FDckI7O0FBRUQsU0FBUyxPQUFPLENBQUMsSUFBSSxFQUFFLFdBQVcsRUFBRTs7QUFFbEMsU0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FDeEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQ1YsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQ3ZCLENBQUMsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUMxQixDQUFDLENBQ0QsTUFBTSxDQUFDLEVBQUMsT0FBTyxFQUFFLElBQUksRUFBQyxDQUFDLENBQ3ZCLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztDQUVkOztxQkFFYyxFQUFDLE1BQU0sRUFBTixNQUFNLEVBQUUsR0FBRyxFQUFILEdBQUcsRUFBRSxRQUFRLEVBQVIsUUFBUSxFQUFFLE9BQU8sRUFBUCxPQUFPLEVBQUMiLCJmaWxlIjoiZXhwZW5zZS9tb2RlbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkYiBmcm9tICcuLi9kYic7XG5pbXBvcnQgY3JlYXRlU2NoZW1hIGZyb20gJ3NjaGVtYSc7XG5pbXBvcnQge2hhc2h9IGZyb20gJy4uL2F1dGgnO1xuaW1wb3J0IHNjaGVtYSBmcm9tICcuL3NjaGVtYSc7XG5cbmNvbnN0IHIgPSBkYi5yO1xuY29uc3QgY29ubiA9IGRiLmNvbm47XG5cbmNvbnN0IGV4cGVuc2VzID0gci50YWJsZSgnZXhwZW5zZXMnKTtcbmNvbnN0IHZhbGlkYXRlID0gY3JlYXRlU2NoZW1hKHNjaGVtYSk7XG5cbmZ1bmN0aW9uIGluc2VydChleHBlbnNlKSB7XG4gIHJldHVybiBleHBlbnNlcy5pbnNlcnQoZXhwZW5zZSkucnVuKGNvbm4pO1xufTtcblxuZnVuY3Rpb24gYWxsKGdyb3VwKSB7XG4gIHJldHVybiBleHBlbnNlcy5maWx0ZXIoe2dyb3VwfSlcbiAgICAub3V0ZXJKb2luKHIudGFibGUoJ3VzZXJzJyksIChleHBlbnNlLCB1c2VyKSA9PiB7XG4gICAgICByZXR1cm4gZXhwZW5zZSgnZW1haWwnKS5lcSh1c2VyKCdpZCcpKTtcbiAgICB9KVxuICAgIC53aXRob3V0KHtyaWdodDogJ2lkJ30pIC8vIG5lZWQgZXhwZW5zZSBkb2N1bWVudCBpZCwgbm90IHVzZXIgaWQgd2hpY2ggaXMgZW1haWxcbiAgICAuemlwKClcbiAgICAubWFwKGV4cGVuc2UgPT4ge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgYW1vdW50OiBleHBlbnNlKCdhbW91bnQnKSxcbiAgICAgICAgZGVsZXRlZDogZXhwZW5zZSgnZGVsZXRlZCcpLmRlZmF1bHQoZmFsc2UpLFxuICAgICAgICBkZXNjcmlwdGlvbjogZXhwZW5zZSgnZGVzY3JpcHRpb24nKS5kZWZhdWx0KCdOT05FJyksXG4gICAgICAgIG5hbWU6IGV4cGVuc2UoJ25hbWUnKS5kZWZhdWx0KGV4cGVuc2UoJ2VtYWlsJykpLFxuICAgICAgICB1c2VyOiBleHBlbnNlKCdlbWFpbCcpLFxuICAgICAgICBpZDogZXhwZW5zZSgnaWQnKSxcbiAgICAgICAgdGltZXN0YW1wOiBleHBlbnNlKCd0aW1lc3RhbXAnKSxcbiAgICAgICAgY3JlYXRvcjogZXhwZW5zZSgnY3JlYXRvcicpLFxuICAgICAgICBzaGFyZUlkOiBleHBlbnNlKCdzaGFyZUlkJykuZGVmYXVsdChudWxsKVxuICAgICAgfVxuICAgIH0pXG4gICAgLm9yZGVyQnkoci5kZXNjKCd0aW1lc3RhbXAnKSlcbiAgICAucnVuKGNvbm4pXG4gICAgLnRoZW4oZGIudG9BcnJheSk7XG59XG5cbmZ1bmN0aW9uIGRlc3Ryb3kodXNlciwgZXhwZW5zZUxpc3QpIHtcblxuICByZXR1cm4gZXhwZW5zZXMuZ2V0QWxsKHIuYXJncyhleHBlbnNlTGlzdCkpXG4gICAgLmZpbHRlcihyLm9yKFxuICAgICAgci5yb3coJ2VtYWlsJykuZXEodXNlciksXG4gICAgICByLnJvdygnY3JlYXRvcicpLmVxKHVzZXIpXG4gICAgKSlcbiAgICAudXBkYXRlKHtkZWxldGVkOiB0cnVlfSlcbiAgICAucnVuKGNvbm4pO1xuXG59XG5cbmV4cG9ydCBkZWZhdWx0IHtpbnNlcnQsIGFsbCwgdmFsaWRhdGUsIGRlc3Ryb3l9O1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9