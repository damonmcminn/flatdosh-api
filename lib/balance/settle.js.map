{"version":3,"sources":["../../es6/balance/settle.js"],"names":[],"mappings":"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","file":"es6/balance/settle.js","sourcesContent":["const EPSILON = 0.00000001;\n\nfunction hi2low(a, b) { return a.amt < b.amt; }\n\nfunction splitBalances(xs, id, amt) {\n  // returns [plus, minue]\n  // id = prop\n  // amt = prop\n\n  let minus = xs.filter(x => x[amt] < 0)\n    .map(x => {\n      return {\n        id: x[id],\n        // want positive numbers\n        amt: -x[amt]\n      };\n    })\n    .sort(hi2low);\n\n  let plus = xs.filter(x => x[amt] > 0)\n    .map(x => {\n      return {\n        id: x[id],\n        amt: x[amt]\n      };\n    })\n    .sort(hi2low);\n\n  return [plus, minus];\n\n}\n\nfunction settle(balances, idField, amtField) {\n\n  let [credit, debt] = splitBalances(balances, idField, amtField);\n  return mapDebts(credit, debt);\n\n}\n\nfunction mapDebts(credit, debt) {\n\n  /* returns {debtorId: [{id: creditorId, amt: amountOwedToCreditor}]}\n   */\n\n  if (credit.length === 0 || debt.length === 0) {\n    return [];\n  }\n\n  let creditor = {amt: 0};\n\n  let debtorsMap = {};\n\n  debt.forEach(val => {\n\n    let balance = val.amt;\n    debtorsMap[val.id] = [];\n\n    // balance as close to ZERO to be ZERO\n    loop: while (balance > EPSILON) {\n\n      let subtracted;\n      try {\n        // only process next debtor if their balance is paid\n        if (creditor.amt === 0) {\n          creditor = credit.shift();\n        } else {\n        }\n\n        subtracted = balance - creditor.amt;\n      } catch (e) {\n        break loop;\n      }\n\n      // floating point pain causing infinite loop\n      // if balance not ZERO but almost zero, the else statement below is executed\n      // some is then ZERO\n      // and balance (almost ZERO) minus equal ZERO is not quite ZERO\n      // so infinite loop!\n      // .1 + .2 === 0.30000000000000004 <----- GAH!\n      // Object({ -0.23: [ Object({ id: 0.595, amt: 0.22999999999999998 }), Object({ id: 0.595, amt: 0.365 }) ], -0.19: [  ], -0.175: [  ] })\n\n      if (subtracted >= 0) {\n        // push primitives, not references..\n        debtorsMap[val.id].push({id: creditor.id, amt: creditor.amt});\n        balance -= creditor.amt;\n        creditor.amt -= creditor.amt;\n      } else {\n        // subtracted is negative\n        let some = creditor.amt - (-subtracted);\n        debtorsMap[val.id].push({id: creditor.id, amt: some});\n        balance -= some;\n        creditor.amt -= some;\n      }\n\n    }\n\n  });\n  return debtorsMap;\n}\n\nexport default settle;\n"]}