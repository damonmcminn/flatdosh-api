{"version":3,"sources":["../../es6/balance/controller.js"],"names":[],"mappings":";;;;;;;;sBAAqB,SAAS;;uBACV,kBAAkB;;;;uBAChB,eAAe;;sBACf,OAAO;;AAE7B,IAAM,MAAM,GAAG,QALP,MAAM,EAKS,CAAC;;qBAET,MAAM;;AAErB,SAAS,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;;AAEnC,UARM,CAAC,CAQL,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,QARrB,CAAC,CAQsB,KAAK,CAAC,UAAU,CAAC,EAC5C,UAAC,IAAI,EAAE,OAAO,EAAK;AACjB,WAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;GACxC,CAAC,CACD,GAAG,EAAE,CACL,GAAG,CAAC,UAAA,GAAG,EAAI;AACV,WAAO,GAAG,CAAC,KAAK,CAAC,EAAC,GAAG,EAAE,GAAG,CAAC,QAAQ,CAAC,WAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;GACnD,CAAC,CACD,KAAK,CAAC,MAAM,CAAC,CACb,GAAG,CAAC,KAAK,CAAC,CACV,OAAO,EAAE,CACT,GAAG,CAAC,UAAA,CAAC,EAAI;AACR,WAAO,EAAC,IAAI,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,WAAW,CAAC,EAAC,CAAA;GAClD,CAAC,CACD,GAAG,SAtBG,IAAI,CAsBD,CACT,IAAI,CAAC,UAAA,OAAO,EAAI;;AAEf,QAAI,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;aAAI,MAAM,CAAC,MAAM;KAAA,CAAC,CAC7C,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI;aAAK,IAAI,GAAG,IAAI;KAAA,CAAC,CAAC;;AAEvC,QAAI,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;aAAI,MAAM,CAAC,MAAM;KAAA,CAAC,CAC/C,MAAM,CAAC,UAAC,IAAI,EAAE,IAAI,EAAK;AACtB,aAAO,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;KAClC,CAAC,CAAC;;AAEL,QAAI,IAAI,GAAG,KAAK,GAAC,OAAO,CAAC,MAAM,CAAC;AAChC,QAAI,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM;aAAI,MAAM,CAAC,MAAM,GAAG,IAAI;KAAA,CAAC,CAC5D,MAAM,CAAC,UAAC,CAAC,EAAC,CAAC;aAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC;KAAA,CAAC,CAAC;;AAElC,QAAI,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAA,MAAM,EAAI;AACnC,aAAO;AACL,YAAI,EAAE,MAAM,CAAC,IAAI;AACjB,kBAAU,EAAE,CAAE,CAAC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAA,CAAE,OAAO,CAAC,CAAC,CAAC,AAAC;AACnD,eAAO,EAAE,CAAE,CAAC,AAAC,MAAM,CAAC,MAAM,GAAG,IAAI,GAAI,aAAa,CAAA,CAAE,OAAO,CAAC,CAAC,CAAC,AAAC;AAC/D,cAAM,EAAE,MAAM,CAAC,MAAM,GAAG,IAAI;OAC7B,CAAC;KACH,CAAC;;;KAGD,IAAI,CAAC,UAAC,CAAC,EAAC,CAAC;aAAK,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE;KAAA,CAAC,CAAC;;AAE5D,OAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;GACpB,CAAC,CAAC;CACN;;AAED,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC","file":"es6/balance/controller.js","sourcesContent":["import {Router} from 'express';\nimport Expense from '../expense/model';\nimport {isError} from 'js-type-check';\nimport {r, conn} from '../db';\n\nconst router = Router();\n\nexport default router;\n\nfunction getBalances(req, res, next) {\n\n  r.table('users').outerJoin(r.table('expenses'),\n    (user, expense) => {\n      return user('id').eq(expense('email'));\n    })\n    .zip()\n    .map(doc => {\n      return doc.merge({amt: doc('amount').default(0)});\n    })\n    .group('name')\n    .sum('amt')\n    .ungroup()\n    .map(x => {\n      return {name: x('group'), amount: x('reduction')}\n    })\n    .run(conn)\n    .then(results => {\n\n      let total = results.map(result => result.amount)\n        .reduce((prev, curr) => prev + curr);\n\n      let largest = results.map(result => result.amount)\n        .reduce((prev, curr) => {\n          return prev > curr ? prev : curr;\n        });\n\n      let each = total/results.length;\n      let largestCredit = results.map(result => result.amount - each)\n        .reduce((p,c) => p > c ? p : c);\n      \n      let balances = results.map(result => {\n        return {\n          name: result.name,\n          Oldbalance: +((result.amount - largest).toFixed(2)),\n          balance: +(((result.amount - each) - largestCredit).toFixed(2)),\n          behind: result.amount - each\n        };\n      })\n      // empty if not balances, let's show them all for the timebeing\n      //.filter(result => result.balance < 0)\n      .sort((a,b) => a.name.toLowerCase() > b.name.toLowerCase());\n\n      res.json(balances);\n    });\n}\n\nrouter.get('/', getBalances);\n"]}